{"ast":null,"code":"var _jsxFileName = \"/Users/shafiali/Desktop/workprojects/Phase3/sportshoes/src/context/adminContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\n//run npx json-server --watch data/db.json --port 8000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminContext = /*#__PURE__*/createContext();\nexport const AdminProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //   const [option, setOption] = useState(0)\n  const [admin, setAdmin] = useState([]);\n  //   const [user, setUsers] = useState([])\n  //   const [click, setClick] = useState(false)\n  useEffect(() => {\n    fetchAdminData();\n    fetchUserData();\n  }, []);\n  const clicked = () => {\n    setClick(true);\n    console.log(click);\n  };\n  const clear = () => {\n    setClick(false);\n  };\n  const fetchAdminData = async () => {\n    const response = await fetch(\"http://localhost:8000/admin\");\n    const data = await response.json();\n    setAdmin(data[0]);\n  };\n  const fetchUserData = async () => {\n    const response = await fetch(\"http://localhost:8000/users\");\n    const data = await response.json();\n    data.map(x => {\n      setUsers(user => [...user, x]);\n    });\n  };\n  const up = async password => {\n    admin.passWord = password;\n    const response = await fetch(\"http://localhost:8000/admin/1\", {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(admin)\n    });\n    alert(\"NEW PASSWORD IS: \" + admin.passWord);\n  };\n  const selectOption = x => {\n    setOption(x);\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: {\n      admin,\n      user,\n      up,\n      option,\n      selectOption,\n      click,\n      clicked,\n      clear\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(AdminProvider, \"z/a2lGCK0158Mci1t7Nd8rr4rt8=\");\n_c = AdminProvider;\nexport default AdminContext;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","AdminContext","AdminProvider","children","admin","setAdmin","fetchAdminData","fetchUserData","clicked","setClick","console","log","click","clear","response","fetch","data","json","map","x","setUsers","user","up","password","passWord","method","headers","body","JSON","stringify","alert","selectOption","setOption","option"],"sources":["/Users/shafiali/Desktop/workprojects/Phase3/sportshoes/src/context/adminContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState } from \"react\";\n//run npx json-server --watch data/db.json --port 8000\n\nexport const  AdminContext = createContext()\nexport const AdminProvider = ({ children }) => {\n//   const [option, setOption] = useState(0)\n  const [admin, setAdmin] = useState([])\n//   const [user, setUsers] = useState([])\n//   const [click, setClick] = useState(false)\n  useEffect(() => {\n    fetchAdminData();\n    fetchUserData();\n  },[])\n\n  const clicked = () =>{\n    setClick(true)\n    console.log(click)\n  }\n  const clear = () =>{\n    setClick(false)\n  }\n    const fetchAdminData = async () => {\n      const response = await fetch(\"http://localhost:8000/admin\")\n      const data = await response.json()\n      setAdmin(data[0])\n    }\n    const fetchUserData = async () => {\n      const response = await fetch(\"http://localhost:8000/users\")\n      const data = await response.json()\n      data.map((x)=>{\n        setUsers(user => [...user, x])\n      })\n\n    }\n\n    const up = async (password) =>{\n      admin.passWord=password\n      const response = await fetch(\"http://localhost:8000/admin/1\",{\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body:JSON.stringify(admin)\n      })\n      alert(\"NEW PASSWORD IS: \"+ admin.passWord)\n    }\n\n    const selectOption = (x) => {\n      setOption(x)\n    }\n\n    return <AdminContext.Provider \n    value={{admin, user, up, option, selectOption, click, clicked,clear}}\n    >\n      {children}\n      </AdminContext.Provider>\n    };\n\n  export default AdminContext"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAChE;AAAA;AAEA,OAAO,MAAOC,YAAY,gBAAGH,aAAa,EAAE;AAC5C,OAAO,MAAMI,aAAa,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC1C;EACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA;EACED,SAAS,CAAC,MAAM;IACdO,cAAc,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,OAAO,GAAG,MAAK;IACnBC,QAAQ,CAAC,IAAI,CAAC;IACdC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB,CAAC;EACD,MAAMC,KAAK,GAAG,MAAK;IACjBJ,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EACC,MAAMH,cAAc,GAAG,YAAY;IACjC,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCZ,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EACD,MAAMT,aAAa,GAAG,YAAY;IAChC,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAG;MACZC,QAAQ,CAACC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC;EAEJ,CAAC;EAED,MAAMG,EAAE,GAAG,MAAOC,QAAQ,IAAI;IAC5BnB,KAAK,CAACoB,QAAQ,GAACD,QAAQ;IACvB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAC;MAC3DU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACzB,KAAK;IAC3B,CAAC,CAAC;IACF0B,KAAK,CAAC,mBAAmB,GAAE1B,KAAK,CAACoB,QAAQ,CAAC;EAC5C,CAAC;EAED,MAAMO,YAAY,GAAIZ,CAAC,IAAK;IAC1Ba,SAAS,CAACb,CAAC,CAAC;EACd,CAAC;EAED,oBAAO,QAAC,YAAY,CAAC,QAAQ;IAC7B,KAAK,EAAE;MAACf,KAAK;MAAEiB,IAAI;MAAEC,EAAE;MAAEW,MAAM;MAAEF,YAAY;MAAEnB,KAAK;MAAEJ,OAAO;MAACK;IAAK,CAAE;IAAA,UAElEV;EAAQ;IAAA;IAAA;IAAA;EAAA,QACe;AAC1B,CAAC;AAAC,GApDOD,aAAa;AAAA,KAAbA,aAAa;AAsDxB,eAAeD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}